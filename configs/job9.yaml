#dataset:
#  input_dir_mesh: "data/test_dataset_one" # Path to folder with meshes to postprocess.
#  input_dir_img: "data/test_dataset_one" # Path to folder with images for meshes.

model:
  point_encoder: "ResnetPointnet" # {ResnetPointnet, ResnetPointnetExtended}
  image_encoder: "Resnet18" # {Resnet18, Resnet34}
  deformation_decoder: "FCStandard" # {FCStandard, FC_BN}
  latent_dim_pointnet: 512
  latent_dim_resnet: 256
  output_delta_V: true # if, conceptually, the model should be outputting delta V (just the displacement), or the entire (delta V + V)

training:
  num_iterations: 400
  learning_rate: 0.0001 #[0.00001*]

  semantic_dis_weight_path: "out/2020_08_24--06_45_44_dcgan_dis_drop8/weights_epoch_3.pt"
  semantic_dis_num_render: 2
  semantic_dis_lam: 0 # semantic discriminator loss weight

  img_sym_num_azim: 1 #[1*]
  img_sym_lam: 50 # image-based symmetry loss [100*]

  sil_lam: 20 # silouette loss. [5*]
  vertex_sym_lam: 0.1 # vertex-based symmetry loss [0.1*]

  l2_lam: 0 # l2 loss on delta v  [1*]
  lap_smoothness_lam: 10  # laplacian smoothing loss [10*]
  normal_consistency_lam: 10 # normal consistency loss [10*]

semantic_dis_training:

  # for adversarial
  batch_size: 8
  adv_iterations: 1500
  num_batches_dis_train: 0
  num_batches_gen_train: 60
  save_model_every: 200 # save model every n adversarial iterations
  label_noise: 0